  events {
    worker_connections 1024;
  }

  http {
    # Upstream for backend (load balancing setup)
    upstream backend {
      server backend:5000;
      # Add more backend instances here for load balancing in the future
      # server backend2:5000;
    }

    # Upstream for frontend
    upstream frontend {
      server frontend:80;
    }

    # Redirect HTTP to HTTPS
    server {
      listen 80;
      server_name studex.ddns.net;

      location /.well-known/acme-challenge/ {
        root /etc/nginx/certs;
      } 

      location / {
        return 301 https://$host$request_uri;
      }
    }

    # HTTPS server
    server {
      listen 443 ssl;
      server_name studex.ddns.net;

      # SSL certificates (to be generated by Certbot)
      ssl_certificate /etc/letsencrypt/live/studex.ddns.net/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/studex.ddns.net/privkey.pem;

      # Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://checkout.razorpay.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://student-mangementproject.s3.ap-south-1.amazonaws.com; connect-src 'self' https://student-mangementproject.s3.ap-south-1.amazonaws.com wss://studex.ddns.net https://api.razorpay.com https://*.agora.io https://*.sd-rtn.com wss://*.sd-rtn.com wss://[0-9-.]*.edge.agora.io wss://[0-9-.]*.edge.sd-rtn.com; frame-src 'self' https://api.razorpay.com;" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

      # Route /api/* to backend
      location /api/ {
        proxy_pass http://backend/; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      # Route all other requests to frontend
      location / {
        proxy_pass http://frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
  }


